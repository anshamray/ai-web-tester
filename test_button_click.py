#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–∞–º
"""

import asyncio
from smart_exploration_agent import SmartExplorationAgent

async def test_button_clicking():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–∞–º"""
    
    agent = SmartExplorationAgent()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ imgur.com
    test_url = "https://imgur.com"
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –∫–ª–∏–∫–∞ –Ω–∞ {test_url}")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä
        await agent.browser_tool.start()
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        page_info = await agent.browser_tool.navigate_to_page(test_url)
        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {page_info.title}")
        
        # –ò—â–µ–º —Ñ–æ—Ä–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        print("\nüîç –ü–æ–∏—Å–∫ —Ñ–æ—Ä–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
        auth_forms = await agent._search_for_auth_links()
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"   –ù–∞–π–¥–µ–Ω–æ —Ñ–æ—Ä–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {len(auth_forms)}")
        
        for i, form in enumerate(auth_forms):
            print(f"   –§–æ—Ä–º–∞ {i+1}: {form.get('purpose', 'unknown')} - {form.get('source_url', 'main_page')}")
            if form.get('trigger_button'):
                print(f"     –¢—Ä–∏–≥–≥–µ—Ä: {form['trigger_button']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        if auth_forms:
            print("\nüë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...")
            personas = agent._create_user_personas()
            
            for persona in personas[:1]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –ø–µ—Ä—Å–æ–Ω—É
                result = await agent._attempt_registration(auth_forms, persona)
                if result:
                    print(f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è {persona['name']}: —É—Å–ø–µ—à–Ω–æ")
                    print(f"   –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ–π: {len(result['fill_result']['filled_fields'])}")
                    print(f"   –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã: {'‚úÖ' if result['submit_result']['success'] else '‚ùå'}")
                else:
                    print(f"‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è {persona['name']}: –Ω–µ—É–¥–∞—á–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        await agent.browser_tool.close()

if __name__ == "__main__":
    asyncio.run(test_button_clicking()) 